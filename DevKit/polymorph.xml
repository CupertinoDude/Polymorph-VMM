<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE library SYSTEM "library.dtd">
<library name="polymorph" basename="PolymorphBase" openname="polymorph.library">
	<include>exec/types.h</include>
	<include>exec/ports.h</include>
	<include>dos/dos.h</include>
	<include>libraries/polymorph.h</include>
	<include>utility/tagitem.h</include>
	<include>utility/hooks.h</include>
	<include>rexx/storage.h</include>
	<interface name="main" version="1.0" struct="PolymorphIFace" prefix="_Polymorph_" asmprefix="IPolymorph" global="IPolymorph">
		<method name="Obtain" result="uint32"/>
		<method name="Release" result="uint32"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>
		<method name="ScriptExec" result="LONG" status="private">
			<arg name="rmsg" type="struct RexxMsg *"/>
			<arg name="result" type="STRPTR *"/>
		</method>
		<method name="OptionTagList" result="ULONG">
			<arg name="options" type="struct TagItem *"/>
		</method>
		<method name="NewMemoryBlock" result="APTR">
		</method>
		<method name="EndMemoryBlock" result="void">
		</method>
		<method name="GetMemoryBlockA" result="ULONG">
		</method>
		<method name="SetMemoryBlockA" result="void">
		</method>
		<method name="ObtainApplication" result="APTR">
		</method>
		<method name="ReleaseApplication" result="void">
		</method>
		<method name="GetApplicationA" result="ULONG">
		</method>
		<method name="SetApplicationA" result="void">
		</method>
		<method name="InitApplicationEntryPoint" result="ULONG">
		</method>
		<method name="ExecApplicationEntryPoint" result="ULONG">
		</method>
		<method name="LoadApplicationSegments" result="ULONG">
		</method>
		<method name="SaveApplicationSegments" result="ULONG">
		</method>
		<method name="LCALL_ObtainEnvironment" result="APTR">
		</method>
		<method name="LCALL_ReleaseEnvironment" result="VOID">
		</method>
		<method name="LCALL_GetEnvironmentA" result="ULONG">
		</method>
		<method name="LCALL_SetEnvironmentA" result="void">
		</method>
		<method name="LCALL_FindEnvironmentA" result="APTR">
		</method>
		<method name="LCALL_FindEnvironmentM" result="APTR">
		</method>
		<method name="LCALL_LoadEnvironment" result="ULONG">
		</method>
		<method name="LCALL_SaveEnvironment" result="ULONG">
		</method>
	</interface>
	<interface name="Eproc" version="1.0" struct="ProcessorIFace" prefix="_Processor_" asmprefix="IProcessor" global="IProcessor">
		<method name="Obtain" result="uint32"/>
		<method name="Release" result="uint32"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>
		<method name="ExecShort"/>
		<method name="ExecOctet"/>
		<method name="ResolveVector"/>
		<method name="ExternVector"/>
		<method name="ReadOctet"/>
		<method name="WriteOctet"/>
		<method name="ReadShortBE"/>
		<method name="WriteShortBE"/>
		<method name="ReadShortLE"/>
		<method name="WriteShortLE"/>
		<method name="ReadLongBE"/>
		<method name="WriteLongBE"/>
		<method name="ReadLongLE"/>
		<method name="WriteLongLE"/>
	</interface>
</library>
